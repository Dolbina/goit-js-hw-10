{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,qBAC/BI,OAAQL,SAASC,cAAc,iBAIH,SAArBK,EAAcC,EAAUL,GAW/B,OAVgB,IAAIM,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEF,WAAUL,UAEpBQ,EAAO,CAAEH,WAAUL,S,GAEpBA,E,IAOeJ,EAAjBO,OAAOS,iBAAiB,SAGhB,SAAIC,GAEuBA,EAAhCC,iBAI2B,IAA7BC,EAAaC,OAAOpB,EAAKI,MAAMiB,OAC/BC,EAAYF,OAAOpB,EAAKK,KAAKgB,OAE7BE,EAAcH,OAAOpB,EAAKM,OAAOe,OACrCG,QAAQC,IAAIF,GAIoC,IAA3C,IAAIG,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EACtCF,QAAQC,IAAK,mBACEjB,EAAC,EAAIkB,EAAGP,EAAaO,EAAIJ,GACnCK,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUL,EAAKwB,EAALxB,MAEjByB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAAN5B,EAAM,M,IAEvE6B,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUL,EAAKwB,EAALxB,MAElByB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAAN5B,EAAM,M,IAGvEJ,EAAKC,KAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n// Знаходимо елементи: поля форми та кнопку\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name = \"amount\"]'),\n  submit: document.querySelector('.form button'),\n};\n\n// Створює функцію, яка створює проміс\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n  \n  \n// Додаємо слухача до кнопки\nrefs.submit.addEventListener('click', onClick);\n\n// колбек-функція\nfunction onClick(event) {\n  // скидує дефолтне перезавантаження сторінки\n  event.preventDefault();\n\n  // Перетворення затримки та кроку в число\n\n  let delayValue = Number(refs.delay.value);\n  let stepValue = Number(refs.step.value);\n\n  let amountValue = Number(refs.amount.value);\n  console.log(amountValue);\n \n  // Цикл для перебору кількості значень, які ввів користувач\n\n  for (let i = 0; i < amountValue; i += 1) {\n  console.log( \"я визиваю функц\")\n    createPromise(1 + i, delayValue + i * stepValue)\n      .then(({ position, delay }) => {\n        // використання бібліотеки Notiflix для відображення повідомлення\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // використання бібліотеки Notiflix для відображення повідомлення\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n      });\n    refs.form.reset();\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","submit","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","console","log","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.667748ce.js.map"}